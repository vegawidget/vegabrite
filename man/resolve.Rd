% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz_autogen_api.R
\name{resolve}
\alias{resolve}
\alias{vl_resolve_axis_x}
\alias{vl_resolve_axis_y}
\alias{vl_resolve_legend_angle}
\alias{vl_resolve_legend_color}
\alias{vl_resolve_legend_fill}
\alias{vl_resolve_legend_fillOpacity}
\alias{vl_resolve_legend_opacity}
\alias{vl_resolve_legend_radius}
\alias{vl_resolve_legend_shape}
\alias{vl_resolve_legend_size}
\alias{vl_resolve_legend_stroke}
\alias{vl_resolve_legend_strokeDash}
\alias{vl_resolve_legend_strokeOpacity}
\alias{vl_resolve_legend_strokeWidth}
\alias{vl_resolve_legend_theta}
\alias{vl_resolve_legend_x}
\alias{vl_resolve_legend_xOffset}
\alias{vl_resolve_legend_y}
\alias{vl_resolve_legend_yOffset}
\alias{vl_resolve_scale_angle}
\alias{vl_resolve_scale_color}
\alias{vl_resolve_scale_fill}
\alias{vl_resolve_scale_fillOpacity}
\alias{vl_resolve_scale_opacity}
\alias{vl_resolve_scale_radius}
\alias{vl_resolve_scale_shape}
\alias{vl_resolve_scale_size}
\alias{vl_resolve_scale_stroke}
\alias{vl_resolve_scale_strokeDash}
\alias{vl_resolve_scale_strokeOpacity}
\alias{vl_resolve_scale_strokeWidth}
\alias{vl_resolve_scale_theta}
\alias{vl_resolve_scale_x}
\alias{vl_resolve_scale_xOffset}
\alias{vl_resolve_scale_y}
\alias{vl_resolve_scale_yOffset}
\title{Resolve axes, legends, or scales for composite charts}
\usage{
vl_resolve_axis_x(spec, how = c("independent", "shared"))

vl_resolve_axis_y(spec, how = c("independent", "shared"))

vl_resolve_legend_angle(spec, how = c("independent", "shared"))

vl_resolve_legend_color(spec, how = c("independent", "shared"))

vl_resolve_legend_fill(spec, how = c("independent", "shared"))

vl_resolve_legend_fillOpacity(spec, how = c("independent", "shared"))

vl_resolve_legend_opacity(spec, how = c("independent", "shared"))

vl_resolve_legend_radius(spec, how = c("independent", "shared"))

vl_resolve_legend_shape(spec, how = c("independent", "shared"))

vl_resolve_legend_size(spec, how = c("independent", "shared"))

vl_resolve_legend_stroke(spec, how = c("independent", "shared"))

vl_resolve_legend_strokeDash(spec, how = c("independent", "shared"))

vl_resolve_legend_strokeOpacity(spec, how = c("independent", "shared"))

vl_resolve_legend_strokeWidth(spec, how = c("independent", "shared"))

vl_resolve_legend_theta(spec, how = c("independent", "shared"))

vl_resolve_legend_x(spec, how = c("independent", "shared"))

vl_resolve_legend_xOffset(spec, how = c("independent", "shared"))

vl_resolve_legend_y(spec, how = c("independent", "shared"))

vl_resolve_legend_yOffset(spec, how = c("independent", "shared"))

vl_resolve_scale_angle(spec, how = c("independent", "shared"))

vl_resolve_scale_color(spec, how = c("independent", "shared"))

vl_resolve_scale_fill(spec, how = c("independent", "shared"))

vl_resolve_scale_fillOpacity(spec, how = c("independent", "shared"))

vl_resolve_scale_opacity(spec, how = c("independent", "shared"))

vl_resolve_scale_radius(spec, how = c("independent", "shared"))

vl_resolve_scale_shape(spec, how = c("independent", "shared"))

vl_resolve_scale_size(spec, how = c("independent", "shared"))

vl_resolve_scale_stroke(spec, how = c("independent", "shared"))

vl_resolve_scale_strokeDash(spec, how = c("independent", "shared"))

vl_resolve_scale_strokeOpacity(spec, how = c("independent", "shared"))

vl_resolve_scale_strokeWidth(spec, how = c("independent", "shared"))

vl_resolve_scale_theta(spec, how = c("independent", "shared"))

vl_resolve_scale_x(spec, how = c("independent", "shared"))

vl_resolve_scale_xOffset(spec, how = c("independent", "shared"))

vl_resolve_scale_y(spec, how = c("independent", "shared"))

vl_resolve_scale_yOffset(spec, how = c("independent", "shared"))
}
\arguments{
\item{spec}{An input vega-lite spec}

\item{how}{One of 'independent', 'shared'}
}
\value{
A modified Vega-Lite Spec
}
\description{
When faceting, layering, repeating, or concatenating a chart, one can choose
whether axes, legends, or scales are shared or independent using the resolve
specification
}
